import app from './app';
import { config } from './config/config';
import { verificarConexion } from './config/supabase';

// Funciรณn para iniciar el servidor
const iniciarServidor = async () => {
  try {
    // Verificar conexiรณn con Supabase
    await verificarConexion();

    // Iniciar servidor
    app.listen(config.port, () => {
      console.log(`
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
โ                                                        โ
โ   ๐ API รlbum Panini - Mundial 2026 ๐               โ
โ                                                        โ
โ   Servidor corriendo en:                              โ
โ   http://localhost:${config.port}                           โ
โ                                                        โ
โ   Endpoints disponibles:                              โ
โ   - GET    /api/selecciones                           โ
โ   - GET    /api/selecciones/:id                       โ
โ   - POST   /api/selecciones                           โ
โ   - PUT    /api/selecciones/:id                       โ
โ   - DELETE /api/selecciones/:id                       โ
โ                                                        โ
โ   - GET    /api/jugadores                             โ
โ   - GET    /api/jugadores/:id                         โ
โ   - GET    /api/jugadores?seleccion_id=:id            โ
โ   - POST   /api/jugadores                             โ
โ   - PUT    /api/jugadores/:id                         โ
โ   - DELETE /api/jugadores/:id                         โ
โ                                                        โ
โ   - GET    /api/health                                โ
โ                                                        โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
      `);
    });
  } catch (error) {
    console.error('โ Error al iniciar el servidor:', error);
    process.exit(1);
  }
};

// Iniciar el servidor
iniciarServidor();
